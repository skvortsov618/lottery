services:

  nginx:
    build: ./.docker/nginx
    container_name: nginx-container 
    ports:
      - "8000:80"
    links:
      - php
    volumes_from:
      - app-data
    depends_on:
      - php

  php:
    build: ./.docker/php
    container_name: php-container
    links:
      - mysql
      - redis
    volumes_from:
      - app-data
    depends_on:
      mysql:
        condition: service_started
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started

  app-data:
    build: ./.docker/php
    container_name: app-data-container
    volumes:
      - ./www:/var/www
    command: "true"

  mysql:
    image: mysql
    container_name: mysql-container
    volumes_from:
      - mysql_data
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: mydb
      MYSQL_USER: myuser
      MYSQL_PASSWORD: password

  mysql_data:
    image: mysql
    container_name: mysql-data-container
    volumes:
      - /www/project/lib/mysql
    command: "true"
  
  redis:
    image: redis:latest

  rabbitmq:
    build: ./.docker/rabbitmq
    container_name: rabbitmq-container
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  rabbitmq-data: